#!/bin/bash
# Findsploit v1.5 by 1N3 @CrowdShield
# https://crowdshield.com
#
# Finsploit is a simple bash script to quickly and easily search both local and online exploit databases.
#
# INSTALLATION
#  run ./install.sh
#
# This script uses the local exploit-db database for exploits. To install this database locally, use the update.sh script under the exploitdb folder first. You will also need to install nmaps script database locally in /usr/share/nmap/scripts/ for the script to work.
#
# For updates to this script, use git clone https://github.com/1N3/Findsploit.git
#

clear

VER='1.5a' #stable versions should be named [0-9].[0-9] unstable versions should be labeled [0-9].[0-9][a-Z] the latter will not come up as an update to Findsploit
SEARCHSPLOIT_SCRIPT='/usr/share/exploitdb/searchsploit' # PATH TO THE EXPLOITDB SEARCH SCRIPT
NMAP_SCRIPTS='/usr/share/findsploit/nmap/nmap' # PATH TO NMAP SCRIPTS
MSF_SEARCH_DIR='/usr/share/findsploit/msf_search' # PATH TO THE FILE CONTAINING METASPLOIT EXPLOITS
BROWSER_CMD='xdg-open' # SET THE BROWSER COMMAND HERE
SEARCH_ARGS=( "exploit" "site:0day.today" "exploit+site:www.securityfocus.com" "site:www.security-database.com" "site:packetstormsecurity.com" )
SLEEP_BEFORE_ONLINE=5
VAR1=$1;
VAR2=$2;
VAR3=$3;
VARS="$*";
COLOR1='\033[91m'
COLOR2='\033[1m\033[92m'
COLOR3='\033[1m'
RESET='\e[0m'

function update {
	echo -e "$COLOR3   ___ _           _           _       _ _   "
	echo -e "$COLOR3  / __(_)_ __   __| |___ _ __ | | ___ (_) |_ "
	echo -e "$COLOR3 / _\ | | '_ \ / _\` / __| '_ \| |/ _ \| | __|"
	echo -e "$COLOR3/ /   | | | | | (_| \__ \ |_) | | (_) | | |_ "
	echo -e "$COLOR3\/    |_|_| |_|\__,_|___/ .__/|_|\___/|_|\__|"
	echo -e "$COLOR3                        |_|                  "
	echo -e "$RESET"
	echo -e "$COLOR1+ -- --=[findsploit v$VER by 1N3 $RESET"
	echo -e "$COLOR1+ -- --=[Checking for updates... $RESET"
	if [[ $(curl -s https://api.github.com/repos/1N3/Findsploit/tags) == "" ]];
	then
    	echo -e "$COLOR1+ -- --=[Error: no active internet connection $RESET"
    	echo ""
    	exit 1
  	fi
  	LATEST_VERSION=$(curl -s https://api.github.com/repos/1N3/Findsploit/tags | grep -Po '"name":.*?[^\\]",'| head -1 | cut -c11-13)
  	if [[ "$LATEST_VERSION" != "$VER" && "$LATEST_VERSION" != "" ]];
  	then
   		echo -e "$COLOR1+ -- --=[Findsploit v$LATEST_VERSION is available to download. $RESET"
   		echo -e "$COLOR1+ -- --=[Do you want to update Findsploit [Y/n]: $RESET"
    	read answer
  		if [[ "$answer" == "Y" || "$answer" == "y" ]] ;
  		then
  			cd  ~ || { echo -e "$COLOR1+ -- --=[Update Failed $RESET" ; exit 1 ; }
			rm -r Findsploit  2> /dev/null
			git clone https://github.com/1N3/Findsploit || { echo -e "$COLOR1+ -- --=[Couldn't download latest version $RESET" ; exit 1; }
			cd Findsploit ||  { echo -e "$COLOR1+ -- --=[Update Failed $RESET" ; exit 1 ;}
			git checkout $LATEST_VERSION 2> /dev/null
			./install.sh
			cd ..
			rm -r Findsploit
  		else
     		exit 1
  		fi
	else
  		echo -e "$COLOR1+ -- --=[Findsploit is already the latest version $RESET"
  		echo ""
	fi
}

function fmtArgs(){
        delim=$1 # set the delimiter
        shift    # skip the delimiters arg
        var=$1   # get the first real arg
        shift    # don't prefix it with the delimiter

        for name in $*
        do
		# set the delimiter for infinite amout of args
                var=$var$delim$name
        done
        echo $var
}

if [ -z "$1" ];
then
	echo -e "$COLOR3   ___ _           _           _       _ _   "
	echo -e "$COLOR3  / __(_)_ __   __| |___ _ __ | | ___ (_) |_ "
	echo -e "$COLOR3 / _\ | | '_ \ / _\` / __| '_ \| |/ _ \| | __|"
	echo -e "$COLOR3/ /   | | | | | (_| \__ \ |_) | | (_) | | |_ "
	echo -e "$COLOR3\/    |_|_| |_|\__,_|___/ .__/|_|\___/|_|\__|"
	echo -e "$COLOR3                        |_|                  "
	echo ""
	echo -e "$COLOR1+ -- --=[findsploit v$VER by 1N3"
	echo -e "$COLOR1+ -- --=[https://crowdshield.com$RESET"
	echo -e "$COLOR1+ -- --=[Usage: findsploit windows xp remote, etc."
	echo ""
	echo ""
	exit;
fi

if [[ "$1" == "--update" || "$1" == "-u" ]];
then
	update
	exit
else
	DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
	echo -e "$COLOR3   ___ _           _           _       _ _   "
	echo -e "$COLOR3  / __(_)_ __   __| |___ _ __ | | ___ (_) |_ "
	echo -e "$COLOR3 / _\ | | '_ \ / _\` / __| '_ \| |/ _ \| | __|"
	echo -e "$COLOR3/ /   | | | | | (_| \__ \ |_) | | (_) | | |_ "
	echo -e "$COLOR3\/    |_|_| |_|\__,_|___/ .__/|_|\___/|_|\__|"
	echo -e "$COLOR3                        |_|                  "
	echo ""
	echo -e "$COLOR1+ -- --=[findsploit v$VER by 1N3"
	echo -e "$COLOR1+ -- --=[https://crowdshield.com$RESET"
	echo ""
	echo -e "$COLOR1+ -- --=[SEARCHING: $COLOR2 $VARS $RESET"
	echo ""
	echo -e "$COLOR1+ -- --=[NMAP SCRIPTS$RESET"
	echo ""
	egrep -i "$VAR1" $NMAP_SCRIPTS | egrep -i "$VAR2" --color=auto | egrep -i "$VAR3" --color=auto
	echo ""
	echo -e "$COLOR1+ -- --=[METASPLOIT EXPLOITS$RESET"
	echo ""
	egrep -i "$VAR1" $MSF_SEARCH_DIR/* | egrep -i "$VAR2" --color=auto | egrep -i "$VAR3" --color=auto
	echo ""
	echo -e "$COLOR1+ -- --=[EXPLOITDB EXPLOITS$RESET"
	echo ""
	$SEARCHSPLOIT_SCRIPT $VARS
	echo ""

	echo -e "$COLOR2+ -- --=[Press any key to search online or Ctrl+C to exit...$RESET"
	read test
	$BROWSER_CMD 2> /dev/null &
	sleep $SLEEP_BEFORE_ONLINE

	$BROWSER_CMD 'https://www.exploit-db.com/search/?action=search&description='$(fmtArgs '+' $VARS)'&e_author=' 2>/dev/null

	for args in "${SEARCH_ARGS[@]}"; do
		$BROWSER_CMD 'https://www.google.ca/search?q='$(fmtArgs '%20' $VARS)'+'$args 2> /dev/null
	done

	$BROWSER_CMD 'https://exploits.shodan.io/?q='$(fmtArgs '+' $VARS) 2> /dev/null
	$BROWSER_CMD 'https://vulners.com/search?query='$(fmtArgs '+' $VARS) 2> /dev/null
fi
exit
